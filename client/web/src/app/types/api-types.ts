/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/unidade": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista Todas as Unidades */
        get: operations["UnidadeController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/unidade/tipo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todos os tipos de unidade */
        get: operations["UnidadeTipoController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/causa": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todas as causas */
        get: operations["CausaController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/causa/sg": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todas as causas consideradas srags cadastradas */
        get: operations["CausaSgController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cid/grupo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todos os grupos de cid cadastrados */
        get: operations["CidGrupoController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cid/categoria": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todas as categorias de cid cadastradas */
        get: operations["CidCategoriaController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cid": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todas as CIDs cadastradas por categoria */
        get: operations["CidController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cid/srag": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lista todos os grupos de cid cadastrados */
        get: operations["CidSragController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/usuario/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Busca um usuario pelo id no banco */
        get: operations["UsuarioController_getById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_signUp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/boletim/internacao-admissao": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BoletimInternacaoAdmissaoController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/boletim/internacao-ocupacao": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BoletimInternacaoOcupacaoController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/boletim/sindrome-gripal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["BoletimSindromeGripalController_findAll"];
        put?: never;
        post: operations["BoletimSindromeGripalController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/boletim/sindrome-gripal/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["BoletimSindromeGripalController_findOne"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ficha-spa": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["FichaSpaController_findAll"];
        put?: never;
        post: operations["FichaSpaController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ficha-spa/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["FichaSpaController_findOne"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AuthSignUpDto: {
            usuario_tipo_id: number;
            unidade_lotada_id: number;
            nome: string;
            cargo: string;
            senha: string;
            matricula: string;
            /** Format: email */
            email: string;
            cpf: string;
        };
        AuthLoginDto: {
            usuario: string;
            senha: string;
        };
        BoletimInternacaoAdmissaoItemData: {
            boletim_internacao_admissao_id: number;
            numero_de_admissoes: number;
            cid_id: number;
            faixa_etaria: string;
            genero: Record<string, never>;
        };
        BoletimInternacaoAdmissaoCreateDto: {
            unidade_id: number;
            /** Format: date-time */
            referente_ao_dia: string;
            items: components["schemas"]["BoletimInternacaoAdmissaoItemData"][];
        };
        BoletimInternacaoOcupacaoCreateDto: {
            unidade_id: number;
            /** Format: date-time */
            referente_ao_dia: string;
            pacientes_uti: number;
            pacientes_uti_isolamento: number;
            pacientes_enfermaria: number;
            pacientes_enfermaria_isolamento: number;
            pacientes_lsvp: number;
            pacientes_estabilizacao_vermelha: number;
        };
        BoletimSindromeGripalFindAllResponse: {
            /** Format: date-time */
            referente_ao_dia: string;
            id: number;
            unidade: {
                id: number;
                nome: string;
            };
            usuario: {
                id: string;
                /** Format: date-time */
                criado_em: string | null;
                /** Format: date-time */
                atualizado_em: string | null;
                nome: string;
                cargo: string;
                matricula: string;
                unidade_lotada_id: number;
                cpf: string;
                email: string | null;
            };
            /** Format: date-time */
            criado_em: string | null;
            /** Format: date-time */
            atualizado_em: string | null;
        };
        BoletimSindromeGripalCreateDto: {
            /** Format: date-time */
            referente_ao_dia: string;
            total_atendimentos_sd_com_queixa_gripal: number;
            total_atendimentos_sd_sem_queixa_gripal: number;
            total_atendimentos_sn_com_queixa_gripal: number;
            total_atendimentos_sn_sem_queixa_gripal: number;
            total_internacoes_apos_atendimento_urgencia_com_queixa_gripal: number;
            total_internacoes_apos_atendimento_urgencia_sem_queixa_gripal: number;
            total_obitos: number;
            total_transferencias: number;
        };
        BoletimSindromeGripalFindOneResponse: {
            id: number;
            unidade: {
                nome: string;
                sigla: string | null;
            };
            usuario: {
                nome: string;
                cargo: string;
                matricula: string;
            };
            unidade_id: number;
            /** Format: date-time */
            referente_ao_dia: string;
            usuario_responsavel_preenchimento_id: string | null;
            total_atendimentos_sd_com_queixa_gripal: number;
            total_atendimentos_sd_sem_queixa_gripal: number;
            total_atendimentos_sn_com_queixa_gripal: number;
            total_atendimentos_sn_sem_queixa_gripal: number;
            total_internacoes_apos_atendimento_urgencia_com_queixa_gripal: number;
            total_internacoes_apos_atendimento_urgencia_sem_queixa_gripal: number;
            total_obitos: number;
            total_transferencias: number;
            /** Format: date-time */
            criado_em: string | null;
            /** Format: date-time */
            atualizado_em: string | null;
        };
        FichaSpaRecepcao: {
            /** Format: date-time */
            hora_da_recepcao: string;
            nao_identificado: boolean;
            nome_paciente: string;
            /** @default M */
            genero: Record<string, never>;
            /** Format: date-time */
            data_de_nascimento: string;
            cartao_sus_ou_cpf: string;
            municipio_rg_id: number;
            /** @default BRANCA */
            raca_cor: Record<string, never>;
            /** @default DEMANDA_ESPONTANEA_SAO_LUIS */
            procedencia: Record<string, never>;
            municipio_procedencia_interior_id: number | null;
        };
        FichaSpaDoencaPrexistente: {
            has: boolean;
            dm: boolean;
            drc: boolean;
            outros: string | null;
        };
        FichaSpaProtocoloECondicaoEspecial: {
            sepse: boolean;
            dor_toracica: boolean;
            avc: boolean;
            notificacao: boolean;
            notificacao_agravo_id: number | null;
        };
        FichaSpaEncaminhamento: {
            /** @default ESTABILIZACAO */
            encaminhado_para_1: Record<string, never>;
            /** @default ECG */
            encaminhado_para_2: Record<string, never>;
            /** Format: date-time */
            hora_da_realizacao_ecg: string | null;
        };
        FichaSpaQueixa: {
            causa_id: number;
        };
        FichaSpaClassificacao: {
            /** Format: date-time */
            hora_da_classificacao: string;
            causa_externa_id: number;
            retornou_com_menos_ou_igual_48h: boolean;
            doenca_prexistente: components["schemas"]["FichaSpaDoencaPrexistente"];
            protocolo_e_condicao_especial: components["schemas"]["FichaSpaProtocoloECondicaoEspecial"];
            encaminhamento: components["schemas"]["FichaSpaEncaminhamento"];
            /** @default VERMELHO */
            manchester: Record<string, never>;
            queixa: components["schemas"]["FichaSpaQueixa"][];
        };
        FichaSpaExameSolicitado: {
            raio_x: boolean;
            tomografia: boolean;
            ecg: boolean;
            ultrassonografia: boolean;
            laboratorio: boolean;
        };
        FichaSpaAtendimentoMedico: {
            /** Format: date-time */
            horario_do_atendimento_medico: string;
            exame_solicitado: components["schemas"]["FichaSpaExameSolicitado"];
        };
        FichaSpaPlanoTerapeutico: {
            /** Format: date-time */
            horario_do_atendimento_na_medicacao_observacao: string;
        };
        FichaSpaDestinoFinalDoPaciente: {
            /** Format: date-time */
            horario_da_saida: string;
            /** @default ALTA */
            destino_final: Record<string, never>;
            unidade_transferida_id: number;
            /** Format: date-time */
            horario_da_saida_para_o_sertor_de_internacao: string;
        };
        FichaSpaCreateDto: {
            numero_da_ficha: string;
            /** Format: date-time */
            data_da_ficha: string;
            recepcao: components["schemas"]["FichaSpaRecepcao"];
            classificacao: components["schemas"]["FichaSpaClassificacao"];
            atendimento_medico: components["schemas"]["FichaSpaAtendimentoMedico"];
            plano_terapeutico: components["schemas"]["FichaSpaPlanoTerapeutico"];
            destino_final_do_paciente: components["schemas"]["FichaSpaDestinoFinalDoPaciente"];
        };
        FichaSpaFindOneResponse: {
            numero_da_ficha: string;
            /** Format: date-time */
            data_da_ficha: string;
            id: number;
            usuario: {
                nome: string;
            };
            unidade: {
                id: number;
                nome: string;
                sigla: string | null;
            };
            ficha_spa_recepcao: {
                /** Format: date-time */
                hora_da_recepcao: string;
                nao_identificado: boolean | null;
                nome_paciente: string | null;
                genero: Record<string, never> | null;
                /** Format: date-time */
                data_de_nascimento: string | null;
                cartao_sus_ou_cpf: string | null;
                raca_cor: Record<string, never> | null;
                procedencia: Record<string, never> | null;
                /** Format: date-time */
                criado_em: string | null;
                /** Format: date-time */
                atualizado_em: string | null;
                municipio_procedencia_interior: {
                    id?: number;
                    nome?: string;
                    estado?: {
                        id?: number;
                        nome?: string;
                        uf?: string;
                    };
                };
                municipio_rg: {
                    id?: number;
                    nome?: string;
                    estado?: {
                        id?: number;
                        nome?: string;
                        uf?: string;
                    };
                };
            }[];
            ficha_spa_classificacao: {
                /** Format: date-time */
                hora_da_classificacao: string;
                retornou_com_menos_ou_igual_48h: boolean;
                manchester: Record<string, never>;
                causa: {
                    id?: number;
                    /** Format: date-time */
                    criado_em?: string | null;
                    /** Format: date-time */
                    atualizado_em?: string | null;
                    nome?: string | null;
                    tipo?: Record<string, never> | null;
                };
                ficha_spa_doenca_preexistente?: {
                    has: boolean;
                    dm: boolean;
                    drc: boolean;
                    outros: string | null;
                    id: number;
                    /** Format: date-time */
                    criado_em: string | null;
                    /** Format: date-time */
                    atualizado_em: string | null;
                    ficha_spa_classificacao_id: number;
                }[];
                ficha_spa_encaminhamento?: {
                    encaminhado_para_1: Record<string, never>;
                    encaminhado_para_2: Record<string, never>;
                    /** Format: date-time */
                    hora_da_realizacao_ecg: string | null;
                    id: number;
                    /** Format: date-time */
                    criado_em: string | null;
                    /** Format: date-time */
                    atualizado_em: string | null;
                    ficha_spa_classificacao_id: number | null;
                }[];
                ficha_spa_protocolo_e_condicao_especial?: {
                    sepse: boolean;
                    dor_toracica: boolean;
                    avc: boolean;
                    notificacao: boolean;
                    notificacao_agravo_id: number | null;
                    id: number;
                    /** Format: date-time */
                    criado_em: string | null;
                    /** Format: date-time */
                    atualizado_em: string | null;
                    ficha_spa_classificacao_id: number;
                }[];
            }[];
            ficha_spa_atendimento_medico: {
                /** Format: date-time */
                horario_do_atendimento_medico: string;
                id: number;
                /** Format: date-time */
                criado_em: string | null;
                /** Format: date-time */
                atualizado_em: string | null;
                ficha_spa_id: number;
            }[];
            ficha_spa_plano_terapeutico: {
                /** Format: date-time */
                horario_do_atendimento_na_medicacao_observacao: string | null;
                id: number;
                /** Format: date-time */
                criado_em: string | null;
                /** Format: date-time */
                atualizado_em: string | null;
                ficha_spa_id: number;
            }[];
            ficha_spa_destino_final_do_paciente: {
                /** Format: date-time */
                horario_da_saida: string | null;
                destino_final: Record<string, never> | null;
                unidade_transferida_id: number | null;
                id: number;
                /** Format: date-time */
                criado_em: string | null;
                /** Format: date-time */
                atualizado_em: string | null;
                ficha_spa_id: number;
                /** Format: date-time */
                horario_da_saida_para_o_setor_de_internacao: string | null;
            }[];
            /** Format: date-time */
            criado_em: string | null;
            /** Format: date-time */
            atualizado_em: string | null;
        };
        FichaSpaFindAllResponse: {
            numero_da_ficha: string;
            /** Format: date-time */
            data_da_ficha: string;
            id: number;
            usuario: {
                id: string;
                nome: string;
            };
            unidade: {
                id: number;
                nome: string;
                sigla: string | null;
            };
            /** Format: date-time */
            criado_em: string | null;
            /** Format: date-time */
            atualizado_em: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    UnidadeController_findAll: {
        parameters: {
            query?: {
                unidade_tipo_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UnidadeTipoController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CausaController_findAll: {
        parameters: {
            query?: {
                tipo?: "EXTERNA" | "QUEIXA";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CausaSgController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CidGrupoController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CidCategoriaController_findAll: {
        parameters: {
            query: {
                cid_grupo_id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CidController_findAll: {
        parameters: {
            query?: {
                cid_categoria_id?: number;
                codigo?: string;
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CidSragController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsuarioController_getById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_signUp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthSignUpDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthLoginDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BoletimInternacaoAdmissaoController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BoletimInternacaoAdmissaoCreateDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BoletimInternacaoOcupacaoController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BoletimInternacaoOcupacaoCreateDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BoletimSindromeGripalController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BoletimSindromeGripalFindAllResponse"][];
                };
            };
        };
    };
    BoletimSindromeGripalController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BoletimSindromeGripalCreateDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BoletimSindromeGripalController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BoletimSindromeGripalFindOneResponse"];
                };
            };
        };
    };
    FichaSpaController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FichaSpaFindAllResponse"][];
                };
            };
        };
    };
    FichaSpaController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FichaSpaCreateDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FichaSpaFindOneResponse"];
                };
            };
        };
    };
    FichaSpaController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FichaSpaFindOneResponse"];
                };
            };
        };
    };
}
